---
interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate: Date | undefined;
  url: string;
  readingTime: string;
  tags: string[] | undefined;
  draft: boolean;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  url,
  readingTime,
  tags,
  draft,
} = Astro.props;

// Show the updated date if available, otherwise use the publication date
const fullDate = (updatedDate ?? pubDate).toLocaleDateString("en", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<li
  class="relative dark:text-zinc-400 text-zinc-600 flex flex-col gap-3 p-5 dark:sm:hover:bg-zinc-800 sm:hover:bg-zinc-200 transition-colors border border-gray-300 rounded-3xl ml-3"
>
  <div
    class="absolute w-3 h-3 bg-gray-300 rounded-full mt-0.5 -left-[19px] border"
  >
  </div>
  <time
    datetime={pubDate.toISOString()}
    class="block text-sm tracking-wide dark:text-zinc-400 text-zinc-600"
  >
    {fullDate} | {readingTime}
  </time>
  <a
    class="text-lg before:absolute before:inset-0 font-semibold dark:text-zinc-100 text-zinc-700"
    href={url}
  >
    {title}
  </a>
  <p class="leading-relaxed max-w-prose">{description}</p>

  <ul class="flex flex-wrap gap-2">
    {
      tags
        ? tags.map((item: string) => (
            <li class="dark:bg-zinc-700 bg-zinc-200 text-zinc-600 dark:text-zinc-300 rounded-md px-2 py-1 text-sm">
              {item}
            </li>
          ))
        : null
    }

    <!-- Add a tag for draft blogs -->
    {
      draft && (
        <li class="dark:bg-white bg-blue-500 text-white dark:text-black rounded-md px-2 py-1 text-sm">
          Draft
        </li>
      )
    }
  </ul>
</li>
